[tool.poetry]
name = "seq2rel"
version = "0.1.0"
description = "A Python package that makes it easy to use sequence-to-sequence (seq2seq) learning for information extraction."
license = "Apache-2.0"
authors = ["johngiorgi <johnmgiorgi@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/johngiorgi/seq2rel"
repository = "https://github.com/johngiorgi/seq2rel"
keywords = [
    "named entity recognition",
    "relation extraction",
    "information extraction",
    "seq2seq"
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
exclude = ["tests", "training_config"]

[tool.poetry.dependencies]
python = "^3.7.1"
typer = {extras = ["all"], version = "^0.3.2"}
allennlp = "^2.4.0"
allennlp-models = "^2.4.0"
allennlp-optuna = { version = "^0.1.5", optional = true }
validators = "^0.18.2"
more-itertools = "^8.7.0"

[tool.poetry.extras]
optuna = ["allennlp-optuna"]

[tool.poetry.dev-dependencies]
black = "^20.8b1"
flake8 = "^3.9.1"
hypothesis = "^6.10.0"
mypy = "^0.812"
pytest = "^6.2.3"
pytest-cov = "^2.11.1"
coverage = "^5.5"
codecov = "^2.1.10"
dephell = {extras = ["full"], version = "^0.8.3"}

# Allows us to automatically generate a setup.py file (with `dephell deps convert`)
# from this pyproject.toml so people who are not interested in using poetry don't have to.
# See: https://github.com/dephell/dephell
[tool.dephell.main]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "setuppy", path = "setup.py"}

# This configuration is borrowed from: https://github.com/allenai/allennlp/blob/main/pyproject.toml
[tool.black]
line-length = 100

include = '\.pyi?$'

exclude = '''
(
      __pycache__
    | \btutorials\b
    | \bbuild\b
    | \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.vscode
    | \.venv
    | \bdist\b
    | \bdoc\b
)
'''

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
